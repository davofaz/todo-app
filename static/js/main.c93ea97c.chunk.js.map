{"version":3,"sources":["components/TaskList.tsx","components/DateDisplay.tsx","components/WeatherWidget.tsx","components/Header.tsx","components/Instructions.tsx","App.tsx","index.tsx"],"names":["TaskList","_ref","todos","todoCompletedCount","filter","todo","completed","length","React","createElement","className","concat","DateDisplay","_useState","useState","_useState2","_slicedToArray","currentDate","setCurrentDate","useEffect","today","Date","toLocaleDateString","undefined","weekday","year","month","day","Fragment","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","WeatherWidget","temperature","setTemperature","_useState3","_useState4","setDesc","_useState5","_useState6","icon","setIcon","_asyncToGenerator","_callee","response","data","temp","_desc","_icon","_context","fetch","json","current","temp_c","condition","text","console","log","t0","apply","arguments","fetchWeatherData","src","alt","Header","handleFormSubmit","newTodo","setNewTodo","onSubmit","placeholder","onChange","e","target","maxLength","Instructions","style","textAlign","App","setTodos","editedTodo","setEditedTodo","storedTodos","localStorage","getItem","JSON","parse","setItem","stringify","toggleTodoCompletion","id","map","_objectSpread","handleDragOver","preventDefault","trim","uuidv4","priority","prevTodos","_toConsumableArray","addTodo","index","draggable","onDragStart","dataTransfer","setData","handleDragStart","onDragOver","onDrop","targetId","draggedId","getData","draggedIndex","findIndex","targetIndex","updatedTodos","handleDrop","onBlur","newText","onClick","onDoubleClick","FiXCircle","removeItem","FiAlertCircle","FiCheckCircle","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.c93ea97c.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Todo, TaskListProps } from './todo';\r\n\r\nconst TaskList: React.FC<TaskListProps> = ({ todos }) => {\r\n\r\n    const todoCompletedCount = todos.filter((todo) =>  todo.completed === true ).length;\r\n\r\n    return (\r\n        <div className=\"task-counter\">\r\n            <ul>\r\n                <li>{`Tasks: ${todos.length}`}</li>\r\n                <li>{`Completed: ${todoCompletedCount}`}</li>\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TaskList;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nconst DateDisplay: React.FC = () => {\r\n    const [currentDate, setCurrentDate] = useState('');\r\n\r\n    useEffect(() => {\r\n        const today = new Date();\r\n        const options: Intl.DateTimeFormatOptions = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\r\n        setCurrentDate(today.toLocaleDateString(undefined, options));\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <p className=\"header-date\">{currentDate}</p>\r\n        </>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default DateDisplay;","import React, { useState, useEffect } from 'react';\r\n\r\nconst WeatherWidget = () => {\r\n    const [temperature, setTemperature] = useState(null);\r\n    const [desc, setDesc] = useState(null);\r\n    const [icon, setIcon] = useState(undefined);\r\n\r\n    useEffect(() => {\r\n        const fetchWeatherData = async () => {\r\n            try {\r\n                const apiKey = '0492ea538a664d1b820153647231206';\r\n                const response = await fetch(\r\n                    `https://api.weatherapi.com/v1/current.json?key=${apiKey}&q=ub69nn`\r\n                );\r\n                const data = await response.json();\r\n                const temp = data && data.current && data.current.temp_c;\r\n                const desc = data && data.current && data.current.condition.text;\r\n                const icon = data && data.current && data.current.condition.icon;\r\n                console.log(desc);\r\n                console.log(icon);\r\n\r\n                setTemperature(temp);\r\n                setDesc(desc);\r\n                setIcon(icon);\r\n            } catch (error) {\r\n                console.error('Error fetching weather data:', error);\r\n            }\r\n        };\r\n\r\n        fetchWeatherData();\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"weather-widget\">\r\n            {temperature && (\r\n                <div>\r\n                    <div>{temperature} &#8451;</div>\r\n                    <div>{desc}</div>\r\n                    <div><img src={icon} alt=\"Weather Icon\" /></div>\r\n                </div>\r\n             )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default WeatherWidget;\r\n","import React from 'react';\r\nimport TaskList from './TaskList';\r\nimport DateDisplay from './DateDisplay';\r\nimport { Todo, HeaderProps } from './todo'\r\nimport WeatherWidget from './WeatherWidget';\r\n\r\n\r\nconst Header: React.FC<HeaderProps> = ({\r\n    todos,\r\n    handleFormSubmit,\r\n    newTodo,\r\n    setNewTodo\r\n\r\n}) => {\r\n\r\n    return (\r\n\r\n        <header className=\"App-header\">\r\n            <h1>My Tasks</h1>\r\n            <DateDisplay />\r\n            <div className=\"header-utils\">\r\n                <TaskList todos={todos} />\r\n                <WeatherWidget />\r\n            </div>\r\n            <form onSubmit={handleFormSubmit}>\r\n                <div className=\"todo-container\">\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Add a new todo\"\r\n                        value={newTodo}\r\n                        onChange={(e) => setNewTodo(e.target.value)}\r\n                        maxLength={112}\r\n                    />\r\n                    <button type=\"submit\">Add</button>\r\n                </div>\r\n            </form>\r\n        </header>\r\n\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nconst Instructions: React.FC = () => {\r\n    return (\r\n        <div style={{ textAlign: 'left' }}>\r\n            <h2>Instructions</h2>\r\n            <ol>\r\n                <li>Add some todos</li>\r\n                <li>Edit by double clicking/tapping</li>\r\n                <li>Drag to change the order</li>\r\n                <li>Delete, mark as important and tick when complete using the icons</li>\r\n            </ol>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Instructions;","import React, { useEffect, useState } from 'react';\r\nimport { FiXCircle, FiAlertCircle, FiCheckCircle } from 'react-icons/fi';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport './App.css';\r\n\r\nimport Header from './components/Header';\r\nimport Instructions from './components/Instructions';\r\nimport { Todo } from './components/todo'\r\n\r\n\r\nconst App: React.FC = () => {\r\n    const [todos, setTodos] = useState<Todo[]>([]);\r\n    const [newTodo, setNewTodo] = useState('');\r\n    const [editedTodo, setEditedTodo] = useState<Todo | null>(null);\r\n   \r\n\r\n\r\n    useEffect(() => {\r\n        const storedTodos = localStorage.getItem('todo-list');\r\n        if (storedTodos) {\r\n            setTodos(JSON.parse(storedTodos));\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (todos.length > 0) {\r\n            localStorage.setItem('todo-list', JSON.stringify(todos));\r\n        }\r\n    }, [todos]);\r\n\r\n    const addTodo = () => {\r\n        if (newTodo.trim() === '') return;\r\n\r\n        const todo: Todo = {\r\n            id: uuidv4(),\r\n            text: newTodo,\r\n            completed: false,\r\n            priority: false,\r\n        };\r\n\r\n        setTodos((prevTodos) => [...prevTodos, todo]);\r\n        setNewTodo('');\r\n    };\r\n\r\n    const deleteTodo = (id: string) => {\r\n        setTodos(todos.filter((todo) => todo.id !== id));\r\n\r\n        if (todos.length === 1) {\r\n\r\n            localStorage.removeItem('todo-list');\r\n        }\r\n\r\n    };\r\n\r\n    const toggleTodoCompletion = (id: string) => {\r\n        setTodos(\r\n            todos.map((todo) => {\r\n                if (todo.id === id) {\r\n                    return {\r\n                        ...todo,\r\n                        completed: !todo.completed,\r\n                    };\r\n                }\r\n                return todo;\r\n            })\r\n        );\r\n    };\r\n\r\n    const handleFormSubmit = (e: React.FormEvent) => {\r\n        e.preventDefault();\r\n        addTodo();\r\n    };\r\n\r\n    const handleTodoEdit = (id: string, text: string) => {\r\n        setEditedTodo({\r\n            id: id,\r\n            text: text,\r\n            completed: false,\r\n            priority: false,\r\n        });\r\n    };\r\n\r\n    const handleTodoUpdate = (id: string, newText: string) => {\r\n        setTodos(\r\n            todos.map((todo) => {\r\n                if (todo.id === id) {\r\n                    return {\r\n                        ...todo,\r\n                        text: newText,\r\n                    };\r\n                }\r\n                return todo;\r\n            })\r\n        );\r\n        setEditedTodo(null);\r\n    };\r\n\r\n    const handleDragStart = (e: React.DragEvent<HTMLLIElement>, id: string) => {\r\n        e.dataTransfer.setData('text/plain', id);\r\n    };\r\n\r\n    const handleDragOver = (e: React.DragEvent<HTMLLIElement>) => {\r\n        e.preventDefault();\r\n    };\r\n\r\n    const handleDrop = (e: React.DragEvent<HTMLLIElement>, targetId: string) => {\r\n        e.preventDefault();\r\n\r\n        const draggedId = e.dataTransfer.getData('text/plain');\r\n        const draggedIndex = todos.findIndex((todo) => todo.id === draggedId);\r\n        const targetIndex = todos.findIndex((todo) => todo.id === targetId);\r\n\r\n        const updatedTodos = [...todos];\r\n        [updatedTodos[draggedIndex], updatedTodos[targetIndex]] = [\r\n            updatedTodos[targetIndex],\r\n            updatedTodos[draggedIndex],\r\n        ];\r\n\r\n        setTodos(updatedTodos);\r\n    };\r\n\r\n    const handlePriorityToggle = (id: string) => {\r\n        setTodos(\r\n            todos.map((todo) => {\r\n                if (todo.id === id) {\r\n                    return {\r\n                        ...todo,\r\n                        priority: !todo.priority,\r\n                    };\r\n                }\r\n                return todo;\r\n            })\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <Header\r\n                todos={todos}\r\n                handleFormSubmit={handleFormSubmit}\r\n                newTodo={newTodo}\r\n                setNewTodo={setNewTodo}\r\n\r\n            />\r\n            <main className=\"App-main\">\r\n                {todos.length < 1 ? (\r\n                    <Instructions />\r\n                    ) :  (\r\n                    <ul className=\"todo-list\">\r\n                        {todos.map((todo, index) => (\r\n                            <li\r\n                                key={todo.id}\r\n                                draggable\r\n                                onDragStart={(e) => handleDragStart(e, todo.id)}\r\n                                onDragOver={handleDragOver}\r\n                                onDrop={(e) => handleDrop(e, todo.id)}\r\n                                className={`${todo.priority ? 'todo-high-priority' : 'todo-low-priority' }`}\r\n                            >\r\n                                {editedTodo && editedTodo.id === todo.id ? (\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        value={editedTodo.text}\r\n                                        onChange={(e) =>\r\n                                            setEditedTodo({\r\n                                                ...editedTodo,\r\n                                                text: e.target.value,\r\n                                            })\r\n                                        }\r\n                                        onBlur={() => handleTodoUpdate(editedTodo.id, editedTodo.text)}\r\n                                    />\r\n                                ) : (\r\n                                    <>\r\n                                        <div\r\n                                            className={`todo-text ${todo.priority ? 'white' : ''} ${todo.completed ? 'completed' : ''}`}\r\n                                            onClick={() => toggleTodoCompletion(todo.id)}\r\n                                            onDoubleClick={() => handleTodoEdit(todo.id, todo.text)}\r\n                                        >\r\n                                           {todo.text}\r\n                                            </div>\r\n                                            <div className=\"todo-icons\">\r\n                                            <FiXCircle\r\n                                                className={`delete-icon ${todo.priority ? 'white' : ''}`}\r\n                                            onClick={() => deleteTodo(todo.id)}\r\n                                            />\r\n                                            <FiAlertCircle\r\n                                                className={`priority-icon ${todo.priority ? 'white' : ''}`}\r\n                                                onClick={() => handlePriorityToggle(todo.id)}\r\n                                            />\r\n                                            <FiCheckCircle\r\n                                                className={`completed-icon ${todo.completed ? 'green' : ''}`}\r\n                                                onClick={() => toggleTodoCompletion(todo.id)}\r\n                                                />\r\n                                            </div>\r\n                                    </>\r\n                                )}\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                     )\r\n                }\r\n            </main>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\n//import reportWebVitals from './reportWebVitals';\r\n\r\nconst root = ReactDOM.createRoot(\r\n  document.getElementById('root') as HTMLElement\r\n);\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n//reportWebVitals();\r\n"],"sourceRoot":""}